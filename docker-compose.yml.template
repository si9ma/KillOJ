version: "3.3"
services:
  rabbitmq:
    image: si9ma/rabbitmq:3.6.11-management-alpine
    hostname: "{{.Service.Name}}.{{.Task.Slot}}.{{.Task.ID}}"
    build:
        context: docker-library/rabbitmq
    networks:
        - net
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
      update_config:
        parallelism: 1
        delay: 10s
    environment:
      - RABBITMQ_ERLANG_COOKIE=abc
      - RABBITMQ_USE_LONGNAME=true
      - RABBITMQ_MNESIA_DIR=/var/lib/rabbitmq/mnesia
      - RABBITMQ_PLUGINS_EXPAND_DIR=/var/lib/rabbitmq/mnesia/plugins-expand
      - SERVICE_NAME={{.Service.Name}}
      - SLOT={{.Task.Slot}}
      - MASTER_SLOT=1
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    ports:
      - "8000:15672" # web ui

  redis:
      image: si9ma/redis:5.0.4-alpine
      hostname: "{{.Service.Name}}.{{.Task.Slot}}.{{.Task.ID}}"
      build:
        context: docker-library/redis
      environment:
        - CLUSTERED=true
        - CLUSTER_NODES=6 # this value must equal to replicas
        - CLUSTER_SETUPER_SLOT=1 # the first slot task to setup cluster
        - SERVICE_NAME={{.Service.Name}}
        - SLOT={{.Task.Slot}}
      networks:
          - net
      deploy:
        replicas: 6
        update_config:
          parallelism: 2
          delay: 10s
        restart_policy:
          condition: on-failure

  jaeger:
      image: jaegertracing/all-in-one:1.11
      hostname: "{{.Service.Name}}.{{.Task.Slot}}.{{.Task.ID}}"
      restart: always
      networks:
          - net
      # environment:
      #   - SPAN_STORAGE_TYPE=elasticsearch
      #   - ES_SERVER_URLS=http://elasticsearch:9200
      deploy:
        placement:
          constraints: [node.role == manager]
      ports:
        # - "5775:5775/udp"
        # - "6831:6831/udp"
        # - "6832:6832/udp"
        # - "5778:5778"
        # - "14268:14268"
        # - "14250:14250"
        - "8001:16686"

  mysql:
      image: mysql
      hostname: "{{.Service.Name}}.{{.Task.Slot}}.{{.Task.ID}}"
      command: --default-authentication-plugin=mysql_native_password --sql_mode='' 
      restart: always
      deploy:
        placement:
          constraints: [node.role == manager]
      networks:
          - net
      environment:
        MYSQL_ROOT_PASSWORD: password
      volumes:
          - mysqlvolume:/var/lib/mysql
  
  # for mysql management
  adminer:
      image: adminer
      hostname: "{{.Service.Name}}.{{.Task.Slot}}.{{.Task.ID}}"
      restart: always
      deploy:
        placement:
          constraints: [node.role == manager]
      networks:
          - net
      ports:
        - 8002:8080

  # # elasticsearch cluster with 2 node
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:6.7.2
  #   environment:
  #     - discovery.type=single-node
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   volumes:
  #     - esdata:/usr/share/elasticsearch/data
  #   ports:
  #     - 9200:9200
  #     - 9300:9300
  #   networks:
  #     - net

  frontend:
      image: si9ma/killoj-frontend
      hostname: "{{.Service.Name}}.{{.Task.Slot}}.{{.Task.ID}}"
      build:
        context: KillOJ-frontend
      environment:
        - BACKEND_URL=http://127.0.0.1:8886 # don't add double quote
      networks:
          - net
      deploy:
        replicas: 1
        restart_policy:
          condition: on-failure
      ports:
        - "8003:80"

  backend:
      image: si9ma/killoj-backend
      hostname: "{{.Service.Name}}.{{.Task.Slot}}.{{.Task.ID}}"
      build:
        context: KillOJ-backend
      environment:
        - JAEGER_AGENT_HOST=jaeger
        - GOAUTH_SESSION_SECRET=SECRET
        - JWT_SECRET=SECTET
        - GITHUB_SECRET=SECTET
        - GITHUB_KEY=KEY
        - KILLOJ_LANG=zh
        - KILLOJ_3RD_AUTH_CALLBACK_URL=http://127.0.0.1/auth3rd
      networks:
          - net
      deploy:
        replicas: 1
        restart_policy:
          condition: on-failure
      ports:
        - "8004:8080"

volumes:
  mysqlvolume:
  # esdata:

networks:
    net:
      driver: overlay
      attachable: true
